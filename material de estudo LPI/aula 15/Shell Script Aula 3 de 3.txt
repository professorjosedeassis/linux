Shell Script

Shell é um ambiente misto (digitação de comandos e programação)
BASH é o shell mais popular(cai LPI)

Shell Script é uma linguagem de script que roda em cima de uma linguagem
base (Linguagem C)

Variáveis (memória RAM)
locais: mesmo terminal (seção)  
globais: todos os terminais

Regras: Não usar espaço, caracteres especiais e acentos em nome de variáveis
        Exceto "underline" _
variáveis locais -> letras minúsculas
variáveis globais -> letras maiúsculas

Para criar uma variável basta atribuir um valor ao nome da variável
exemplo:
nome="José de Assis"  ### Se não colocar entre aspas não aceita espaço
nota1=8

comandos:
echo -> "imprime um texto no terminal"
echo$ -> "mostra" o conteúdo de uma variável

set -> exibe todas as variáveis
unset -> apaga uma variável
export -> transforma uma variável em global
env -> exibe todas as variáveis exportadas

____________________________________________________________________________

Hello world
"Shebang"
#!/bin/bash

Exemplo 1: Hello World

Passo 1) Criar um arquivo com a extensão .sh
vi hello.sh

Passo 2) Editar o arquivo
#!/bin/bash
clear;
echo "Hwllo World";
exit;

Passo 3) Acrescentar permissão de execução
chmod +x hello.sh
chmod 755 hello.sh

Passo 4) Para executar o arquivo:
sh hello.sh
.\hello.sh (no próprio diretório)
/caminho/hello.sh (fora do diretório)

__________________________________________________________________

Exemplo 2) Cálculo da média de 2 notas (estruturas condicionais)

Operadores matemáticos
+ - / * (soma, subtração, divisão e multiplicação)
exemplo
echo $[10/2]

Variáveis nota1, nota2, resultado

Entrada de dados: nota1 e nota2
Processamento:

                       nota1+nota2
              media =  ___________
                            2

media = nota1 + nota2 / 2

Saída: resultado

Critério:
resultado: maior ou igual a 5 -> APROVADO
           menor do que 5 -> REPROVADO

Estrutura condicional (if else)

Sintaxe shell script if else:
### ATENÇÃO aos espaços
if [ condição ]; then
condição verdadeira;
else
condição falsa;
fi

Sintaxe shell script if else (encadeado):
if [ condição1 ]; then
condição1 verdadeira;
elif [ condição2 ]; then 
condição2 verdadeira;
else
condição falsa;
fi

### Comparadores aritiméticos
-eq  (igual)
-ne  (diferente)
-gt  (maior)
-lt  (menor)
-le  (menor igual)
-ge  (maior igual)

### Comparadores lógicos
&&  (AND)
||  (OR)
!   (NOT)


*** script na máquina virtual

_____________________________________________________

Exemplo 3: Uso da estrutura switch case

sintaxe:
case (variável) in
"1")
código1
;;
"2")
código2
;;
*)
nenhuma das anteriores
esac;

*** script na máquina virtual
__________________________________________________________

Exemplo 4: Estruturas de repetições:

- Finitas (Você determina o número de repetições)
sintaxe
for contador in {1..10}
do
comandos;
done

Exemplo de uma estrutura finita(máquina real):

vi pegadinha.sh

#!/bin/bash
# eject (abre a gaveta do DVD)
# eject -t (fecha a gaveta do DVD)
# sleep (timer em segundos)
for contador in {1..5}
do
eject;
sleep 2;
eject -t;
sleep 2;
done
exit;

- Infinitas (repete enquanto a condição for verdadeira)
sintaxe: 
while [ condição ]
do
comando;
done

### script na máquina virtual

___________________________________________________________________________
Dica: Podemos executar comandos dentro do script

apt-get install screenfetch (traz informações do sistema debian com o logo)

_______________________________________________________________________________

Atividades:

1) Sistema eleição
Digite a sua idade: 
- VOTO PROIBIDO (se idade menor que 16)
- VOTO OBRIGATÓRIO (se idade maior ou igual a 18 e menor que 70)
- VOTO FACULTATIVO (16, 17 ou acima de 70)

2) conversão dia -> mês (switch case)

3) Tabuada (for ou while)

_______________________________________________________________________________
Funções:

criando uma função no shell script

nome(){
}

exemplo:

hello(){
echo "Hello";
echo -n "Digite o seu nome: ";
echo "Hello "$nome;
}

Para executar a função, basta digitar o nome da função:
hello

_______________________________________________________________
Exemplo de script para facilitar o back-up

#!/bin/bash
clear;
echo -n "Digite o diretório origem do back-up: ";
read origem;
### Verificando se existe o diretório de origem
### ! -d (test)
### -d (verifica se existe o caminho do diretório apontado na variável $origem)
### ! (porta NÃO "inversor") se não existir
if [ ! -d $origem ]; then
echo "diretório não encontrado";
exit;
fi
### criando um backup com data e hora automática
### Para atribuir um comando personalizado a variável, usar `apostrofe`
data=`date + %d%m%y%H%M%S`;
tar -czvf $data.tgz $origem;
clear;
echo "Backup realizado com sucesso em `pwd`;
exit;